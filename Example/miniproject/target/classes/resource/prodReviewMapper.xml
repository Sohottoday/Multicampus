<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="resource.prodReviewMapper">
	 
 	<select id="selectReview"  resultType="vo.ProdReviewVO" parameterType="_int">
 		select reViewID, IDCord, NickName, IDEmail, prodID, viewTitle, to_char(ViewDate,'yyyy"년" mm"월" dd"일"') AS ViewDate, ViewContenxt, Viewcnt, ViewUpCnt, ViewImg, ViewStar, ViewPoice, oneline
		from prodReview
		where reViewID=#{id}
 	</select>
 	
 	<select id="selectReviewCount"  resultType="int">
 		select max(rownum)
		from prodReview
		where prodID=#{prodID}
 	</select>
 	
 	<!-- 물품에 들어가면 그 물품에 대한 리뷰의 갯수 출력 -->

 	<select id="selectReviewList"  resultType="vo.ProdReviewVO" parameterType="vo.FindReviewVO">
 	
 		select reViewID, NickName, viewTitle, to_char(ViewDate,'yyyy"년" mm"월" dd"일"') AS ViewDate, Viewcnt, ViewUpCnt, ViewStar
        from 	(select reViewID, NickName, viewTitle, ViewDate, Viewcnt, ViewUpCnt, ViewStar, rownum rnum
				from prodReview
				where prodID =#{prodID})
		where rnum between  10*#{pgNum}-9 and 10*#{pgNum}
		order by reViewID desc
 	</select>

 	
 	<!-- 그 물품에 대한 리뷰를 작성 하는 부분 -->
 	<insert id="insertReview" parameterType="vo.ProdReviewVO">
		<selectKey keyProperty="reViewID" order="BEFORE" resultType="int">
			SELECT prodreview_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		insert into prodReview 
			(reViewID, idCord, NickName, IDEmail, prodID, viewTitle, ViewDate, ViewContenxt, Viewcnt, ViewUpCnt, ViewImg, ViewStar, ViewPoice, oneline) 
		values 
			(#{reViewID}, #{idCord}, #{nickName}, #{idEmail}, #{prodID}, #{viewTitle}, Sysdate, #{viewContenxt}, #{viewcnt}, #{viewUpCnt}, #{viewImg}, #{viewStar}, #{viewPoice},#{oneline})
	</insert>
	
	<select id="selectReviewstar"  resultType="vo.StarSelectVO" parameterType="string">
 		select VIEWSTAR,COUNT(*) AS counting 
		from prodreview 
		where prodID = #{prodID}
		GROUP by VIEWSTAR
		order by VIEWSTAR
 	</select>
 	
 	<select id="selectAvgStar"  resultType="_int" parameterType="string">
 		select avg(VIEWSTAR) AS avg
		from prodreview 
		where prodID = #{prodID}
 	</select>
 	
 	<delete id="deleteReview" parameterType="_int" >
 		delete from prodReview
 		where reViewID=#{reViewID}
	</delete>
 
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="vo.ProdReviewVO" >
		update prodReview
		set viewTitle = #{viewTitle}, ViewContenxt = #{viewContenxt}, oneline = #{oneline}, viewStar = #{viewStar}
		where reViewID=#{reViewID}
	</update>
 	
 	
 	
 	
 	<!--
 	<select id="selectOneNews" resultType="vo.ProdReviewVO" parameterType="_int" >
 		select id, writer, title, content, to_char(writedate,'yyyy"년" mm"월" dd"일"') AS "writedate", cnt from news where id = #{id}
	</select>
	
  	<insert id="insertNews" parameterType="vo.ProdReviewVO">
		<selectKey resultType="int" keyProperty="id" order="BEFORE">
			select news_seq.nextval from dual
 		</selectKey>
		insert into news values (#{id}, #{writer}, #{title}, #{content}, sysdate, 0)
	</insert>
	
	<select id="searchTitleNews" parameterType="string" resultType= "vo.ProdReviewVO">
    	select id, writer, title, content, to_char(writedate,'yyyy"년" mm"월" dd"일"') AS "writedate", cnt
		from news
    	where title like '%'||#{key}||'%'
    </select>
    
    <select id="searchWriterNews" parameterType="string" resultType= "vo.ProdReviewVO">
    	select id, writer, title, content, to_char(writedate,'yyyy"년" mm"월" dd"일"') AS "writedate", cnt
		from news
    	where writer like '%'||#{key}||'%'
    </select>
    
    <delete id="deleteNews" parameterType="_int" >
 		delete from news where id = #{id}
	</delete>
	
	<update id="updateNews" parameterType="vo.ProdReviewVO" >
		update news
		set writer = #{writer}, title = #{title}, content = #{content}
		where id = #{id}
	</update>
	
	<update id="updateViews" parameterType="vo.ProdReviewVO" >
		update news
		set cnt = #{cnt}
		where id = #{id}
	</update>
	
	<select id="selectTotalNewsNum" resultType="Integer">
 		SELECT count(id) from news
	</select>
	 -->
</mapper>








